import{_ as i,c as a,o as n,ag as l}from"./chunks/framework.DPDPlp3K.js";const c=JSON.parse('{"title":"Redis","description":"","frontmatter":{},"headers":[],"relativePath":"src/Middleware/非关系型数据库/Redis.md","filePath":"src/Middleware/非关系型数据库/Redis.md","lastUpdated":1737139361000}'),e={name:"src/Middleware/非关系型数据库/Redis.md"};function p(t,s,r,k,h,d){return n(),a("div",null,s[0]||(s[0]=[l(`<h1 id="redis" tabindex="-1">Redis <a class="header-anchor" href="#redis" aria-label="Permalink to &quot;Redis&quot;">​</a></h1><p>Redis 是一款开源的高性能键值对数据库，它支持多种数据结构，如字符串、哈希、列表、集合、有序集合等。Redis 具有高性能、高并发、可扩展性等优点。</p><p>Redis 常用命令：</p><ul><li>SET key value：设置键值对</li><li>GET key：获取键值对</li><li>DEL key：删除键值对</li><li>EXPIRE key seconds：设置键值对的过期时间</li><li>TTL key：获取键值对的剩余过期时间</li><li>HSET key field value：设置哈希表字段值</li><li>HGET key field：获取哈希表字段值</li><li>HDEL key field：删除哈希表字段值</li><li>LPUSH key value：将值插入列表头部</li><li>LPOP key：弹出列表头部的值</li><li>RPUSH key value：将值插入列表尾部</li><li>RPOP key：弹出列表尾部的值</li><li>SADD key value：添加集合元素</li><li>SMEMBERS key：获取集合元素</li><li>SREM key value：删除集合元素</li><li>ZADD key score value：添加有序集合元素</li><li>ZRANGE key start stop [WITHSCORES]：获取有序集合元素</li><li>ZREM key value：删除有序集合元素</li><li>INCR key：自增键值</li><li>DECR key：自减键值</li><li>INCRBY key increment：自增键值</li><li>DECRBY key decrement：自减键值</li><li>MSET key1 value1 key2 value2：批量设置键值对</li><li>MGET key1 key2：批量获取键值对</li><li>SCAN key cursor [MATCH pattern] [COUNT count]：扫描键值对</li><li>KEYS pattern：获取匹配的键</li><li>FLUSHALL：清空所有键值对</li><li>FLUSHDB：清空当前数据库的所有键值对 Redis 连接：</li></ul><div class="language-python vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">python</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> redis</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 连接 Redis 数据库</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">redis_client </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> redis.Redis(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;localhost&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">port</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">6379</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">db</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 设置键值对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">redis_client.set(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;Jay&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 获取键值对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> redis_client.get(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 删除键值对</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">redis_client.delete(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;name&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br></div></div><p>Redis 配置文件：</p><div class="language-ini vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Redis 配置文件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 端口号</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port 6379</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据库数量</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">databases 16</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 日志文件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">logfile /var/log/redis/redis.log</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 数据持久化</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save 900 1</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save 300 10</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">save 60 10000</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 内存淘汰策略</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">maxmemory-policy noeviction</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 慢查询日志</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slowlog-log-slower-than 10000</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">slowlog-max-len 128</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br></div></div><p>Redis 数据结构：</p><ul><li>String（字符串）：字符串类型是 Redis 中最基本的数据类型，可以存储字符串、整数或者浮点数。</li><li>Hash（哈希）：Redis 的哈希类型是一个 string 类型的 field 和 value 的映射表，它是一个无序的键值对集合。</li><li>List（列表）：Redis 的列表类型是简单的字符串列表，按照插入顺序排序。</li><li>Set（集合）：Redis 的集合类型是 string 类型的无序集合。</li><li>Sorted Set（有序集合）：Redis 的有序集合类型是 Set 类型的一种，它将每个元素关联一个 double 类型的分数。</li></ul><p>Redis 应用场景：</p><ul><li>缓存：Redis 可以作为缓存数据库，用于存储热点数据，提高系统的响应速度。</li><li>分布式锁：Redis 可以实现分布式锁，用于控制多个进程对共享资源的访问。</li><li>消息队列：Redis 可以实现消息队列，用于实现异步处理。</li><li>计数器：Redis 可以实现计数器，用于统计用户访问量、点赞数等。</li><li>分布式会话：Redis 可以实现分布式会话，用于实现分布式系统的用户会话管理。</li><li>任务队列：Redis 可以实现任务队列，用于处理大量的任务。</li></ul>`,11)]))}const b=i(e,[["render",p]]);export{c as __pageData,b as default};
