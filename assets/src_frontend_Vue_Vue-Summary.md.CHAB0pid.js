import{_ as t,C as r,c as h,o as k,ag as p,j as i,G as e,a,w as l}from"./chunks/framework.DPDPlp3K.js";const y=JSON.parse('{"title":"Vue 总结","description":"","frontmatter":{},"headers":[],"relativePath":"src/frontend/Vue/Vue-Summary.md","filePath":"src/frontend/Vue/Vue-Summary.md","lastUpdated":1742449656000}'),o={name:"src/frontend/Vue/Vue-Summary.md"};function d(u,s,b,g,E,c){const n=r("font");return k(),h("div",null,[s[14]||(s[14]=p('<h1 id="vue-总结" tabindex="-1"><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue</a> 总结 <a class="header-anchor" href="#vue-总结" aria-label="Permalink to &quot;[Vue](https://cn.vuejs.org/) 总结&quot;">​</a></h1><h1 id="_1-vue-基础" tabindex="-1">1. <a href="./vue-base.html">Vue 基础</a> <a class="header-anchor" href="#_1-vue-基础" aria-label="Permalink to &quot;1. [Vue 基础](vue-base)&quot;">​</a></h1><ul><li><p>Vue 实例的创建</p></li><li><p>数据绑定</p></li></ul><blockquote><h2 id="生命周期" tabindex="-1">生命周期 <a class="header-anchor" href="#生命周期" aria-label="Permalink to &quot;生命周期&quot;">​</a></h2></blockquote><hr><blockquote><p>Vue2 生命周期图 <img src="https://v2.cn.vuejs.org/images/lifecycle.png" alt="Vue2生命周期图"></p></blockquote><blockquote><p>Vue3+ 生命周期图 <img src="https://cn.vuejs.org/assets/lifecycle_zh-CN.W0MNXI0C.png" alt="生命周期图"></p></blockquote><blockquote><h3 id="vue-生命周期钩子" tabindex="-1">Vue 生命周期钩子 <a class="header-anchor" href="#vue-生命周期钩子" aria-label="Permalink to &quot;Vue 生命周期钩子&quot;">​</a></h3></blockquote><ul><li>beforeCreate: 实例初始化之后，数据观测和事件配置之前被调用</li><li>created: 实例创建完成后被立即调用，此时已完成数据观测，但尚未挂载</li><li>beforeMount: 在挂载开始之前被调用，相关的 render 函数首次被调用</li><li>mounted: 实例被挂载后调用，此时 DOM 已更新</li><li>beforeUpdate: 数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前</li><li>updated: 数据更改导致的虚拟 DOM 重新渲染和打补丁之后调用</li><li>beforeUnmount（<code>beforeDestroy</code>）: 实例销毁之前调用</li><li>unmounted（<code>destroyed</code>）: 实例销毁后调用</li><li>errorCaptured: 捕获后代组件错误时调用</li><li>renderTracked: 跟踪虚拟 DOM 重新渲染时调用</li><li>renderTriggered: 当虚拟 DOM 重新渲染被触发时调用</li></ul><p>执行顺序：</p><ol><li>beforeCreate</li><li>created</li><li>beforeMount</li><li>mounted</li><li>beforeUpdate</li><li>updated</li><li>beforeUnmount(<code>beforeDestroy</code>)</li><li>unmounted(<code>destroyed</code>)</li></ol><hr><blockquote><p>注意 ⚠️⚠️⚠️ vue3 <strong><em><code>beforeUnmount</code></em></strong> 替换 vue2 <s><code>beforeDestroy</code></s> vue3 <strong><em><code>unmounted</code></em></strong> 替换 vue2 <s><code>destroyed</code></s></p></blockquote><hr>',14)),i("blockquote",null,[s[13]||(s[13]=i("p",null,"总结",-1)),i("ol",null,[s[11]||(s[11]=i("li",null,"生命周期钩子函数在 Vue 组件生命周期中的执行顺序",-1)),i("li",null,[e(n,{color:"red"},{default:l(()=>s[0]||(s[0]=[a("Vue3")])),_:1}),s[4]||(s[4]=a(" 中废弃了 ")),e(n,{color:"blue"},{default:l(()=>s[1]||(s[1]=[a("Vue2")])),_:1}),s[5]||(s[5]=a(" 中的 ")),s[6]||(s[6]=i("s",null,[i("em",null,[i("strong",null,"beforeDestroy")])],-1)),s[7]||(s[7]=a(" 和 ")),s[8]||(s[8]=i("s",null,[i("em",null,[i("strong",null,"destroyed")])],-1)),s[9]||(s[9]=a("，取而代之的是 ")),e(n,{color:"red"},{default:l(()=>s[2]||(s[2]=[a(" beforeUnmount")])),_:1}),s[10]||(s[10]=a(" 和 ")),e(n,{color:"red"},{default:l(()=>s[3]||(s[3]=[a(" unmounted")])),_:1})]),s[12]||(s[12]=i("li",null,"理解生命周期钩子的执行时机和用途，有助于更好地管理组件的生命周期和状态",-1))])]),s[15]||(s[15]=p(`<ul><li><p>插件</p></li><li><p>组件</p></li><li><p>路由</p></li><li><p>状态管理</p></li><li><p>表单处理</p></li><li><p>动画和过渡</p></li><li><p>性能优化</p></li><li><p>单元测试</p></li></ul><blockquote><h2 id="项目结构" tabindex="-1">项目结构 <a class="header-anchor" href="#项目结构" aria-label="Permalink to &quot;项目结构&quot;">​</a></h2></blockquote><div class="language-js vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">项目结构</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> src</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 源代码目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> assets</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 静态资源目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> components</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 公共组件目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> views</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 页面组件目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> router</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 路由配置目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 状态管理配置目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> utils</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 工具函数目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> App.vue: 根组件。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> main.js: 入口文件。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> public</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 公共资源目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> index.html: 入口页面。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> dist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 打包输出目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> node_modules</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: 依赖包目录。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> package.json: 项目配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> package-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">lock.json: 依赖包版本锁定。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> .gitignore: git 忽略文件。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  babel.config.js: babel 配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .eslintrc.js: eslint 配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .prettierrc.js: 代码格式化配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .editorconfig: 编辑器配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .browserslistrc: 浏览器兼容配置。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .env: 环境变量。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .env.development: 开发环境变量。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .env.production: 生产环境变量。</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  -</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  .env.xxx: 其他环境变量。</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br></div></div><h1 id="_2-vue-进阶" tabindex="-1">2. Vue 进阶 <a class="header-anchor" href="#_2-vue-进阶" aria-label="Permalink to &quot;2. Vue 进阶&quot;">​</a></h1><ul><li><p>响应式原理</p></li><li><p>虚拟 DOM</p></li></ul><h1 id="_3-vue-高阶" tabindex="-1">3. Vue 高阶 <a class="header-anchor" href="#_3-vue-高阶" aria-label="Permalink to &quot;3. Vue 高阶&quot;">​</a></h1><ul><li><p>项目配置</p></li><li><p>项目部署</p></li><li><p>项目优化</p></li></ul><p>。。。。。。 待续</p><p>参考:</p><ul><li><p><a href="https://gitee.com/paganini_995175254/vue3-study-code.git" target="_blank" rel="noreferrer">gitee自学教程</a></p></li><li><p><a href="https://cn.vuejs.org/" target="_blank" rel="noreferrer">Vue 官方文档</a></p></li><li><p><a href="https://v3.cn.vuejs.org/" target="_blank" rel="noreferrer">Vue 3 官方文档</a></p></li><li><p><a href="https://v2.cn.vuejs.org/" target="_blank" rel="noreferrer">Vue 2 官方文档</a></p></li></ul>`,10))])}const f=t(o,[["render",d]]);export{y as __pageData,f as default};
