import{_ as i,c as a,o as t,ag as p}from"./chunks/framework.DPDPlp3K.js";const y=JSON.parse('{"title":"TypeScript 基础","description":"","frontmatter":{},"headers":[],"relativePath":"src/frontend/TypeScript/typescript.md","filePath":"src/frontend/TypeScript/typescript.md","lastUpdated":1739530875000}'),e={name:"src/frontend/TypeScript/typescript.md"};function n(r,s,l,h,c,d){return t(),a("div",null,s[0]||(s[0]=[p(`<h1 id="typescript-基础" tabindex="-1">TypeScript 基础 <a class="header-anchor" href="#typescript-基础" aria-label="Permalink to &quot;TypeScript 基础&quot;">​</a></h1><h2 id="初见-typescript" tabindex="-1">初见 TypeScript <a class="header-anchor" href="#初见-typescript" aria-label="Permalink to &quot;初见 TypeScript&quot;">​</a></h2><p>TypeScript 融合了后端面向对象编程思想的 超级版 JavaScript，并添加了类型系统，使得代码更加可靠、可维护。</p><h2 id="环境搭建" tabindex="-1">环境搭建 <a class="header-anchor" href="#环境搭建" aria-label="Permalink to &quot;环境搭建&quot;">​</a></h2><div class="language-ts vp-adaptive-theme line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm init </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">y </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 初始化项目</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;!--</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> npm install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> @types</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">node </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 安装node.js的类型定义包 --&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">npm install </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">D</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> typescript </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 本地项目安装 typescript</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// npm install -g typescript</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 全局安装 typescript</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//tsc --init</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> // 生成 tsconfig.json 文件</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br></div></div><hr><h2 id="typescript-内置工具" tabindex="-1"><a href="./TypeScript_Built-in_Utility.html">TypeScript 内置工具</a> <a class="header-anchor" href="#typescript-内置工具" aria-label="Permalink to &quot;[TypeScript 内置工具](TypeScript_Built-in_Utility)&quot;">​</a></h2><h2 id="typescript-类型" tabindex="-1"><a href="./TypeScript_Type.html">TypeScript 类型</a> <a class="header-anchor" href="#typescript-类型" aria-label="Permalink to &quot;[TypeScript 类型](TypeScript_Type)&quot;">​</a></h2><h2 id="typescript-高级" tabindex="-1"><a href="./TypeScript_Advanced.html">TypeScript 高级</a> <a class="header-anchor" href="#typescript-高级" aria-label="Permalink to &quot;[TypeScript 高级](TypeScript_Advanced)&quot;">​</a></h2>`,9)]))}const o=i(e,[["render",n]]);export{y as __pageData,o as default};
